<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.flying.jeelite.modules.gen.dao.GenTableColumnDao">

    <sql id="genTableColumnColumns">
		a.*,
		b.id AS "genTable.id",
		b.name AS "genTable.name",
		b.comments AS "genTable.comments",
		b.class_name AS "genTable.className",
		b.parent_table AS "genTable.parentTable",
		b.parent_table_fk AS "genTable.parentTableFk"
	</sql>

	<sql id="genTableColumnJoins">
		JOIN gen_table b ON b.id = a.gen_table_id
    </sql>

    <select id="get" resultType="GenTableColumn">
		SELECT
			<include refid="genTableColumnColumns"/>
		FROM gen_table_column a
		<include refid="genTableColumnJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="GenTableColumn">
		SELECT
			<include refid="genTableColumnColumns"/>
		FROM gen_table_column a
		<include refid="genTableColumnJoins"/>
		WHERE a.del_flag = #{param.DEL_FLAG_NORMAL}
		<if test="param.name != null and param.name != ''">
			AND a.name LIKE
				<if test="dbName == 'oracle'">'%'||#{param.name}||'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{param.name},'%')</if>
		</if>
		<if test="param.genTable != null and param.genTable.id != null and param.genTable.id != ''">
			AND a.gen_table_id = #{param.genTable.id}
		</if>
		ORDER BY a.sort ASC
	</select>

	<select id="findTableColumnList" resultType="GenTableColumn">
		<if test="dbName == 'oracle'">
			SELECT
				t.COLUMN_NAME AS name,
				(CASE WHEN t.NULLABLE = 'Y' THEN '1' ELSE '0' END) AS isNull,
				(t.COLUMN_ID * 10) AS sort,
				c.COMMENTS AS comments,
				decode(t.DATA_TYPE,'DATE',t.DATA_TYPE || '(' || t.DATA_LENGTH || ')',
					'VARCHAR2', t.DATA_TYPE || '(' || t.DATA_LENGTH || ')',
					'VARCHAR', t.DATA_TYPE || '(' || t.DATA_LENGTH || ')',
					'NVARCHAR2', t.DATA_TYPE || '(' || t.DATA_LENGTH/2 || ')',
					'CHAR', t.DATA_TYPE || '(' || t.DATA_LENGTH || ')',
					'NUMBER',t.DATA_TYPE || (nvl2(t.DATA_PRECISION,nvl2(decode(t.DATA_SCALE,0,null,t.DATA_SCALE),
						'(' || t.DATA_PRECISION || ',' || t.DATA_SCALE || ')',
						'(' || t.DATA_PRECISION || ')'),'(18)')),t.DATA_TYPE) AS jdbcType
			FROM user_tab_columns t, user_col_comments c
			WHERE t.TABLE_NAME = c.table_name
				AND t.COLUMN_NAME = c.column_name
			<if test="name != null and name != ''">
				AND t.TABLE_NAME = upper(#{name})
			</if>
			ORDER BY t.COLUMN_ID
		</if>
		<if test="dbName == 'mysql'">
			SELECT t.COLUMN_NAME AS name, (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS isNull,
				(t.ORDINAL_POSITION * 10) AS sort,t.COLUMN_COMMENT AS comments,t.COLUMN_TYPE AS jdbcType
			FROM information_schema.`COLUMNS` t
			WHERE t.TABLE_SCHEMA = (select database())
			<if test="name != null and name != ''">
				AND t.TABLE_NAME = (#{name})
			</if>
			ORDER BY t.ORDINAL_POSITION
		</if>
	</select>

	<update id="deleteByGenTableId">
		UPDATE gen_table_column SET
			del_flag = '1'
		WHERE gen_table_id = #{deleteByGenTableId}
	</update>

</mapper>