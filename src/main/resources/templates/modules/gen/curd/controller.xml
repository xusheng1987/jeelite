<?xml version="1.0" encoding="utf-8"?>
<template>
	<name>controller</name>
	<filePath>src/main/java/${packageName}/${moduleName}/web</filePath>
	<fileName>${ClassName}Controller.java</fileName>
	<content><![CDATA[
/**
 * Copyright &copy; 2017-2018 <a href="https://github.com/xusheng1987/jeelite">jeelite</a> All rights reserved.
 */
package ${packageName}.${moduleName}.web;

import java.util.Map;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.github.flying.jeelite.common.persistence.Page;
import com.github.flying.jeelite.common.rest.Result;
import com.github.flying.jeelite.common.utils.StringUtils;
import com.github.flying.jeelite.common.web.BaseController;
import ${packageName}.${moduleName}.entity.${ClassName};
import ${packageName}.${moduleName}.service.${ClassName}Service;

/**
 * ${functionName}Controller
 *
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Controller
@RequestMapping(value = "${r"${adminPath}"}/${urlPrefix}")
public class ${ClassName}Controller extends BaseController {

	@Autowired
	private ${ClassName}Service ${className}Service;

	@ModelAttribute
	public ${ClassName} get(@RequestParam(required = false) String id) {
		${ClassName} entity = null;
		if (StringUtils.isNotBlank(id)) {
			entity = ${className}Service.get(id);
		}
		if (entity == null) {
			entity = new ${ClassName}();
		}
		return entity;
	}

	@RequiresPermissions("${permissionPrefix}:view")
	@RequestMapping(value = {"list", ""})
	public String list() {
		return "${lastPackageName}/${viewPrefix}List";
	}

	@ResponseBody
	@RequiresPermissions("${permissionPrefix}:view")
	@RequestMapping(value = "data")
	public Map listData(${ClassName} ${className}) {
		Page<${ClassName}> page = ${className}Service.findPage(${className});
		return jsonPage(page);
	}

	@RequiresPermissions("${permissionPrefix}:view")
	@RequestMapping(value = "form")
	public String form(${ClassName} ${className}, Model model) {
		model.addAttribute("${className}", ${className});
		return "${lastPackageName}/${viewPrefix}Form";
	}

	@ResponseBody
	@RequiresPermissions("${permissionPrefix}:edit")
	@RequestMapping(value = "save")
	public Result save(${ClassName} ${className}) {
		beanValidator(${className});
		
		${className}Service.save(${className});
		return renderSuccess("保存${functionNameSimple}成功");
	}

	@ResponseBody
	@RequiresPermissions("${permissionPrefix}:edit")
	@RequestMapping(value = "delete")
	public Result delete(${ClassName} ${className}) {
		${className}Service.delete(${className});
		return renderSuccess("删除${functionNameSimple}成功");
	}

}]]>
	</content>
</template>